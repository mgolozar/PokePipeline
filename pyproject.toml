[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pokepipeline"
version = "0.1.0"
description = "A data pipeline for fetching and processing PokÃ©mon data from PokeAPI"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Aventa", email = "hello@aventa.com"},
]
keywords = ["pipeline", "pokemon", "data", "etl"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "SQLAlchemy>=2.0.0",
    "alembic>=1.12.0",
    "typer[all]>=0.9.0",
    "psycopg[binary]>=3.1.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "coverage>=7.3.0",
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.10.0",
]

[project.scripts]
pokepipeline = "pokepipeline.cli:app"

[tool.setuptools]
packages = ["pokepipeline", "pokepipeline.extract", "pokepipeline.transform", "pokepipeline.load", "pokepipeline.quality"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["E501", "F401"]

[tool.ruff.isort]
known-first-party = ["pokepipeline"]

# Coverage configuration
[tool.coverage.run]
source = ["pokepipeline"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = "-v --strict-markers"

